var Tower = [list:
  [list: circle(30,"solid","crimson")
    ,circle(50, "solid", "purple")
    ,circle(70, "solid", "navy")
    ,circle(90, "solid", "aqua")],
  [list: ],
  [list: ]]
#Creates a mutable variable that containes all the circles in the hanoi tower using lists

fun move(From :: Number, To :: Number):
#A move function that takes in the place you want to move a circle from and the place you want to move it to
  if (Tower.get(From - 1) == empty): raise("Not a valid move")
#This line checks if the pin has a circle, if there is none it returnes a error message
  else:
    f = Tower.get(From - 1).first #Den Ã¸verste ringen
    r = Tower.get(From - 1).rest #Resten av ringene
    #f is the first ring on the pin f for first and r is the rest of the pins r for rest
    step = Tower.set(From - 1, r) 
    #This step sets all the remaining circles back to the original pin
    step.set(To - 1, link(f, step.get(To - 1)))
    #This moves the first circle to the desired pin
  end
end

fun hanoi(From :: Number, To :: Number):
#This comand is used to play and save the Hanoi Tower
  Tower := move(From, To)
  #This changes the variable Tower to the new tower
end

fun Stacking(x, y):
  overlay(x,y)
  end
#Function to stack the circles on a pin

fun print-tower():
#Function to print the pins and circles
  pin1 = fold(Stacking, circle(5,"solid","black"), Tower.get(0))
  pin2 = fold(Stacking, circle(5,"solid","black"), Tower.get(1))
  pin3 = fold(Stacking, circle(5,"solid","black"), Tower.get(2))
  print(beside(beside(pin1, pin2), pin3))
#Stacks the pins besides eachother and prints them out
end
#You can play this game by writing hanoi("The pin you want to move it from", "The pin you want to move it to") in the console and to show the result you can write print-tower() in the console
